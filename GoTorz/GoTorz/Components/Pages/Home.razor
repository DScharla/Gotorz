@page "/"
@rendermode InteractiveServer
@inject OfferService OfferService
@inject OfferResponse OfferResponse
@inject ILogger<Home> logger
@inject ILogger<Home> logger2
@inject NavigationManager Navigation
@inject IConfiguration Configuration
@inject IJSRuntime JSRuntime


<PageTitle>Home</PageTitle>

<h1>Prøver lige at tjekke API</h1>
<button @onclick="GetOfferRequestID">OfferID</button>
<p>
    Hej, her er respons:
    @if (offerResponse != null) 
    {
        <p>@offerResponse.Data.OfferReponseId</p>
    }
    else
    {
        <p>Der er ikke noget svar endnu</p>
    }
</p>

<p><button @onclick="Login">Login with Google</button></p>

<Search/>

@code {
    private OfferResponse? offerResponse = null;
    private IJSObjectReference? searchModule;

    protected override async void OnInitialized()
    {
        logger.LogInformation("Home page visited");
        logger2.LogInformation("Trooooooooools");
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            Console.WriteLine("Home component rendered. Now importing Search.js...");
            searchModule = await JSRuntime.InvokeAsync<IJSObjectReference>("import", "/Search.js");
        }
    }

    private async Task Login()
    {
        Navigation.NavigateTo("/authentication/login", forceLoad: true);
    }


    private async Task Logout()
    {
        Navigation.NavigateTo("Local", forceLoad: true);
    }

    private async Task<OfferResponse?> GetOfferRequestID()
    {
        return offerResponse = await OfferService.PostOfferAsync();
    }
}
